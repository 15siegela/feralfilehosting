# Set the variable so we can also redirect to server.feralhosting.com/username/
set $feraluser  "username";

# Checks if https is NOT on and then SETs part one of our custom variable.
if ($http_x_forwarded_proto != https ) {
    set $forceh  A;
}

# Check for the URL format username.server.feralhosting.com and SETs part 2 of our custom variable.
if ($http_x_host = $http_host) {
    set $forceh  "${forceh}1"; 
}

# Check for the URL format server.feralhosting.com/username and SETs part 2 of our custom variable.
if ($http_x_host != $http_host) {
    set $forceh  "${forceh}2";
}

# Check x_host when it does match host that it is also specific to feral, so as not to apply to a users's VHost domains.
if ($http_x_host ~* ^([0-9a-zA-Z-]+)\.([0-9a-zA-Z-]+)\.feralhosting\.com$) {
    set $forceh  "${forceh}3";
}

# Check x_host when it does not match host that it is also specific to feral, so as not to apply to a users's VHost domains.
if ($http_x_host ~* ^([0-9a-zA-Z-]+)\.feralhosting\.com$) {
    set $forceh  "${forceh}4";
}

# Combines the SET options to rewrite this URL format: username.server.feralhosting.com
if ($forceh = A13) {
    rewrite ^ https://$http_x_host$request_uri? permanent;
}

# Combines the SET options to rewrite this URL format: server.feralhosting.com/username
if ($forceh = A24) {
    rewrite ^ https://$http_x_host/$feraluser$request_uri? permanent;
}